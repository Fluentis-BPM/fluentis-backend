// <auto-generated />
using System;
using FluentisCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FluentisCore.Migrations
{
    [DbContext(typeof(FluentisContext))]
    [Migration("20250423180418_AddJefeRolToRol")]
    partial class AddJefeRolToRol
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FluentisCore.Models.BackupAndIncidentManagement.Backup", b =>
                {
                    b.Property<int>("IdBackup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBackup"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenciaContenido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("TipoContenido")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdBackup");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Backups");
                });

            modelBuilder.Entity("FluentisCore.Models.BackupAndIncidentManagement.Incidente", b =>
                {
                    b.Property<int>("IdIncidente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIncidente"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaReporte")
                        .HasColumnType("datetime2");

                    b.Property<int>("Severidad")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioReportaId")
                        .HasColumnType("int");

                    b.HasKey("IdIncidente");

                    b.HasIndex("UsuarioReportaId");

                    b.ToTable("Incidentes");
                });

            modelBuilder.Entity("FluentisCore.Models.CommentAndNotificationManagement.Comentario", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComentario"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FlujoActivoId")
                        .HasColumnType("int");

                    b.Property<int?>("PasoSolicitudId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdComentario");

                    b.HasIndex("FlujoActivoId");

                    b.HasIndex("PasoSolicitudId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("FluentisCore.Models.CommentAndNotificationManagement.Notificacion", b =>
                {
                    b.Property<int>("IdNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNotificacion"));

                    b.Property<DateTime>("FechaEnvio")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Leida")
                        .HasColumnType("bit");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prioridad")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdNotificacion");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("FluentisCore.Models.InputAndApprovalManagement.Delegacion", b =>
                {
                    b.Property<int>("IdRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRelacion"));

                    b.Property<int>("DelegadoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoAprobacionId")
                        .HasColumnType("int");

                    b.Property<int>("SuperiorId")
                        .HasColumnType("int");

                    b.HasKey("IdRelacion");

                    b.HasIndex("DelegadoId");

                    b.HasIndex("GrupoAprobacionId");

                    b.HasIndex("SuperiorId");

                    b.ToTable("Delegaciones");
                });

            modelBuilder.Entity("FluentisCore.Models.InputAndApprovalManagement.GrupoAprobacion", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrupo"));

                    b.Property<bool>("EsGlobal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdGrupo");

                    b.ToTable("GruposAprobacion");
                });

            modelBuilder.Entity("FluentisCore.Models.InputAndApprovalManagement.Inputs", b =>
                {
                    b.Property<int>("IdInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInput"));

                    b.Property<bool?>("EsJson")
                        .HasColumnType("bit");

                    b.Property<int>("TipoInput")
                        .HasColumnType("int");

                    b.HasKey("IdInput");

                    b.ToTable("Inputs");
                });

            modelBuilder.Entity("FluentisCore.Models.InputAndApprovalManagement.RelacionDecisionUsuario", b =>
                {
                    b.Property<int>("IdRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRelacion"));

                    b.Property<bool?>("Decision")
                        .HasColumnType("bit");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("RelacionGrupoAprobacionId")
                        .HasColumnType("int");

                    b.HasKey("IdRelacion");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("RelacionGrupoAprobacionId");

                    b.ToTable("DecisionesUsuario");
                });

            modelBuilder.Entity("FluentisCore.Models.InputAndApprovalManagement.RelacionGrupoAprobacion", b =>
                {
                    b.Property<int>("IdRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRelacion"));

                    b.Property<int>("GrupoAprobacionId")
                        .HasColumnType("int");

                    b.Property<int?>("PasoSolicitudId")
                        .HasColumnType("int");

                    b.Property<int?>("SolicitudId")
                        .HasColumnType("int");

                    b.HasKey("IdRelacion");

                    b.HasIndex("GrupoAprobacionId");

                    b.HasIndex("PasoSolicitudId");

                    b.HasIndex("SolicitudId");

                    b.ToTable("RelacionesGrupoAprobacion");
                });

            modelBuilder.Entity("FluentisCore.Models.InputAndApprovalManagement.RelacionInput", b =>
                {
                    b.Property<int>("IdRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRelacion"));

                    b.Property<int>("InputId")
                        .HasColumnType("int");

                    b.Property<int?>("PasoSolicitudId")
                        .HasColumnType("int");

                    b.Property<bool>("Requerido")
                        .HasColumnType("bit");

                    b.Property<int?>("SolicitudId")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdRelacion");

                    b.HasIndex("InputId");

                    b.HasIndex("PasoSolicitudId");

                    b.HasIndex("SolicitudId");

                    b.ToTable("RelacionesInput");
                });

            modelBuilder.Entity("FluentisCore.Models.InputAndApprovalManagement.RelacionUsuarioGrupo", b =>
                {
                    b.Property<int>("IdRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRelacion"));

                    b.Property<int>("GrupoAprobacionId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdRelacion");

                    b.HasIndex("GrupoAprobacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RelacionesUsuarioGrupo");
                });

            modelBuilder.Entity("FluentisCore.Models.MetricsAndReportsManagement.Excepcion", b =>
                {
                    b.Property<int>("IdExcepcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExcepcion"));

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PasoSolicitudId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdExcepcion");

                    b.HasIndex("PasoSolicitudId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Excepciones");
                });

            modelBuilder.Entity("FluentisCore.Models.MetricsAndReportsManagement.Informe", b =>
                {
                    b.Property<int>("IdInforme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInforme"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaGeneracion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioGeneradorId")
                        .HasColumnType("int");

                    b.HasKey("IdInforme");

                    b.HasIndex("UsuarioGeneradorId");

                    b.ToTable("Informes");
                });

            modelBuilder.Entity("FluentisCore.Models.MetricsAndReportsManagement.InformeFlujo", b =>
                {
                    b.Property<int>("IdInformeFlujo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInformeFlujo"));

                    b.Property<int>("FlujoId")
                        .HasColumnType("int");

                    b.Property<int>("InformeId")
                        .HasColumnType("int");

                    b.HasKey("IdInformeFlujo");

                    b.HasIndex("FlujoId");

                    b.HasIndex("InformeId");

                    b.ToTable("InformesFlujo");
                });

            modelBuilder.Entity("FluentisCore.Models.MetricsAndReportsManagement.InformeMetrica", b =>
                {
                    b.Property<int>("IdInformeMetrica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInformeMetrica"));

                    b.Property<int>("InformeId")
                        .HasColumnType("int");

                    b.Property<int>("MetricaId")
                        .HasColumnType("int");

                    b.HasKey("IdInformeMetrica");

                    b.HasIndex("InformeId");

                    b.HasIndex("MetricaId");

                    b.ToTable("InformesMetricas");
                });

            modelBuilder.Entity("FluentisCore.Models.MetricsAndReportsManagement.Metrica", b =>
                {
                    b.Property<int>("IdMetrica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMetrica"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCalculo")
                        .HasColumnType("datetime2");

                    b.Property<int>("FlujoId")
                        .HasColumnType("int");

                    b.Property<float>("Meta")
                        .HasColumnType("real");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoMetrica")
                        .HasColumnType("int");

                    b.Property<int>("Unidad")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("IdMetrica");

                    b.HasIndex("FlujoId");

                    b.ToTable("Metricas");
                });

            modelBuilder.Entity("FluentisCore.Models.ProposalAndVotingManagement.Propuesta", b =>
                {
                    b.Property<int>("IdPropuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPropuesta"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int?>("FlujoId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.HasKey("IdPropuesta");

                    b.HasIndex("FlujoId");

                    b.HasIndex("UsuarioCreadorId");

                    b.ToTable("Propuestas");
                });

            modelBuilder.Entity("FluentisCore.Models.ProposalAndVotingManagement.Votacion", b =>
                {
                    b.Property<int>("IdVotacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVotacion"));

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropuestaId")
                        .HasColumnType("int");

                    b.Property<int?>("Resultado")
                        .HasColumnType("int");

                    b.HasKey("IdVotacion");

                    b.HasIndex("PropuestaId");

                    b.ToTable("Votaciones");
                });

            modelBuilder.Entity("FluentisCore.Models.ProposalAndVotingManagement.Voto", b =>
                {
                    b.Property<int>("IdVoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVoto"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.Property<int>("VotacionId")
                        .HasColumnType("int");

                    b.HasKey("IdVoto");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VotacionId");

                    b.ToTable("Votos");
                });

            modelBuilder.Entity("FluentisCore.Models.UserManagement.Departamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDepartamento"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdDepartamento");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("FluentisCore.Models.UserManagement.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<int?>("JefeRolId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdRol");

                    b.HasIndex("JefeRolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FluentisCore.Models.UserManagement.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Oid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.CaminoParalelo", b =>
                {
                    b.Property<int>("IdCamino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCamino"));

                    b.Property<bool>("EsExcepcion")
                        .HasColumnType("bit");

                    b.Property<int>("PasoDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("PasoOrigenId")
                        .HasColumnType("int");

                    b.HasKey("IdCamino");

                    b.HasIndex("PasoDestinoId");

                    b.HasIndex("PasoOrigenId");

                    b.ToTable("CaminosParalelos");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.FlujoActivo", b =>
                {
                    b.Property<int>("IdFlujoActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFlujoActivo"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("FlujoEjecucionId")
                        .HasColumnType("int");

                    b.Property<int>("SolicitudId")
                        .HasColumnType("int");

                    b.HasKey("IdFlujoActivo");

                    b.HasIndex("FlujoEjecucionId");

                    b.HasIndex("SolicitudId");

                    b.ToTable("FlujosActivos");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.FlujoAprobacion", b =>
                {
                    b.Property<int>("IdFlujo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFlujo"));

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsPlantilla")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("VersionActual")
                        .HasColumnType("int");

                    b.HasKey("IdFlujo");

                    b.HasIndex("CreadoPor");

                    b.ToTable("FlujosAprobacion");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.PasoFlujo", b =>
                {
                    b.Property<int>("IdPaso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaso"));

                    b.Property<int>("FlujoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ReglaAprobacion")
                        .HasColumnType("int");

                    b.Property<int>("TipoFlujo")
                        .HasColumnType("int");

                    b.Property<int>("TipoPaso")
                        .HasColumnType("int");

                    b.HasKey("IdPaso");

                    b.HasIndex("FlujoId");

                    b.ToTable("PasosFlujo");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.PasoSolicitud", b =>
                {
                    b.Property<int>("IdPasoSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPasoSolicitud"));

                    b.Property<int>("CaminoId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("FlujoActivoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PasoId")
                        .HasColumnType("int");

                    b.Property<int>("ReglaAprobacion")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsableId")
                        .HasColumnType("int");

                    b.Property<int>("TipoFlujo")
                        .HasColumnType("int");

                    b.Property<int>("TipoPaso")
                        .HasColumnType("int");

                    b.HasKey("IdPasoSolicitud");

                    b.HasIndex("CaminoId");

                    b.HasIndex("FlujoActivoId");

                    b.HasIndex("PasoId");

                    b.HasIndex("ResponsableId");

                    b.ToTable("PasosSolicitud");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.Solicitud", b =>
                {
                    b.Property<int>("IdSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSolicitud"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int?>("FlujoBaseId")
                        .HasColumnType("int");

                    b.Property<int>("SolicitanteId")
                        .HasColumnType("int");

                    b.HasKey("IdSolicitud");

                    b.HasIndex("FlujoBaseId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("FluentisCore.Models.BackupAndIncidentManagement.Backup", b =>
                {
                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FluentisCore.Models.BackupAndIncidentManagement.Incidente", b =>
                {
                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "UsuarioReporta")
                        .WithMany()
                        .HasForeignKey("UsuarioReportaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioReporta");
                });

            modelBuilder.Entity("FluentisCore.Models.CommentAndNotificationManagement.Comentario", b =>
                {
                    b.HasOne("FluentisCore.Models.WorkflowManagement.FlujoActivo", "FlujoActivo")
                        .WithMany()
                        .HasForeignKey("FlujoActivoId");

                    b.HasOne("FluentisCore.Models.WorkflowManagement.PasoSolicitud", "PasoSolicitud")
                        .WithMany()
                        .HasForeignKey("PasoSolicitudId");

                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlujoActivo");

                    b.Navigation("PasoSolicitud");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FluentisCore.Models.CommentAndNotificationManagement.Notificacion", b =>
                {
                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FluentisCore.Models.InputAndApprovalManagement.Delegacion", b =>
                {
                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "Delegado")
                        .WithMany()
                        .HasForeignKey("DelegadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.InputAndApprovalManagement.GrupoAprobacion", "GrupoAprobacion")
                        .WithMany()
                        .HasForeignKey("GrupoAprobacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "Superior")
                        .WithMany()
                        .HasForeignKey("SuperiorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Delegado");

                    b.Navigation("GrupoAprobacion");

                    b.Navigation("Superior");
                });

            modelBuilder.Entity("FluentisCore.Models.InputAndApprovalManagement.RelacionDecisionUsuario", b =>
                {
                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.InputAndApprovalManagement.RelacionGrupoAprobacion", "RelacionGrupoAprobacion")
                        .WithMany()
                        .HasForeignKey("RelacionGrupoAprobacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RelacionGrupoAprobacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FluentisCore.Models.InputAndApprovalManagement.RelacionGrupoAprobacion", b =>
                {
                    b.HasOne("FluentisCore.Models.InputAndApprovalManagement.GrupoAprobacion", "GrupoAprobacion")
                        .WithMany()
                        .HasForeignKey("GrupoAprobacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.WorkflowManagement.PasoSolicitud", "PasoSolicitud")
                        .WithMany()
                        .HasForeignKey("PasoSolicitudId");

                    b.HasOne("FluentisCore.Models.WorkflowManagement.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudId");

                    b.Navigation("GrupoAprobacion");

                    b.Navigation("PasoSolicitud");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("FluentisCore.Models.InputAndApprovalManagement.RelacionInput", b =>
                {
                    b.HasOne("FluentisCore.Models.InputAndApprovalManagement.Inputs", "Input")
                        .WithMany()
                        .HasForeignKey("InputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.WorkflowManagement.PasoSolicitud", "PasoSolicitud")
                        .WithMany()
                        .HasForeignKey("PasoSolicitudId");

                    b.HasOne("FluentisCore.Models.WorkflowManagement.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudId");

                    b.Navigation("Input");

                    b.Navigation("PasoSolicitud");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("FluentisCore.Models.InputAndApprovalManagement.RelacionUsuarioGrupo", b =>
                {
                    b.HasOne("FluentisCore.Models.InputAndApprovalManagement.GrupoAprobacion", "GrupoAprobacion")
                        .WithMany()
                        .HasForeignKey("GrupoAprobacionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoAprobacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FluentisCore.Models.MetricsAndReportsManagement.Excepcion", b =>
                {
                    b.HasOne("FluentisCore.Models.WorkflowManagement.PasoSolicitud", "PasoSolicitud")
                        .WithMany()
                        .HasForeignKey("PasoSolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PasoSolicitud");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FluentisCore.Models.MetricsAndReportsManagement.Informe", b =>
                {
                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "UsuarioGenerador")
                        .WithMany()
                        .HasForeignKey("UsuarioGeneradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioGenerador");
                });

            modelBuilder.Entity("FluentisCore.Models.MetricsAndReportsManagement.InformeFlujo", b =>
                {
                    b.HasOne("FluentisCore.Models.WorkflowManagement.FlujoAprobacion", "FlujoAprobacion")
                        .WithMany()
                        .HasForeignKey("FlujoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.MetricsAndReportsManagement.Informe", "Informe")
                        .WithMany()
                        .HasForeignKey("InformeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FlujoAprobacion");

                    b.Navigation("Informe");
                });

            modelBuilder.Entity("FluentisCore.Models.MetricsAndReportsManagement.InformeMetrica", b =>
                {
                    b.HasOne("FluentisCore.Models.MetricsAndReportsManagement.Informe", "Informe")
                        .WithMany()
                        .HasForeignKey("InformeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.MetricsAndReportsManagement.Metrica", "Metrica")
                        .WithMany()
                        .HasForeignKey("MetricaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Informe");

                    b.Navigation("Metrica");
                });

            modelBuilder.Entity("FluentisCore.Models.MetricsAndReportsManagement.Metrica", b =>
                {
                    b.HasOne("FluentisCore.Models.WorkflowManagement.FlujoAprobacion", "FlujoAprobacion")
                        .WithMany()
                        .HasForeignKey("FlujoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlujoAprobacion");
                });

            modelBuilder.Entity("FluentisCore.Models.ProposalAndVotingManagement.Propuesta", b =>
                {
                    b.HasOne("FluentisCore.Models.WorkflowManagement.FlujoAprobacion", "FlujoAprobacion")
                        .WithMany()
                        .HasForeignKey("FlujoId");

                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("UsuarioCreadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlujoAprobacion");

                    b.Navigation("UsuarioCreador");
                });

            modelBuilder.Entity("FluentisCore.Models.ProposalAndVotingManagement.Votacion", b =>
                {
                    b.HasOne("FluentisCore.Models.ProposalAndVotingManagement.Propuesta", "Propuesta")
                        .WithMany()
                        .HasForeignKey("PropuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propuesta");
                });

            modelBuilder.Entity("FluentisCore.Models.ProposalAndVotingManagement.Voto", b =>
                {
                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.ProposalAndVotingManagement.Votacion", "Votacion")
                        .WithMany()
                        .HasForeignKey("VotacionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Votacion");
                });

            modelBuilder.Entity("FluentisCore.Models.UserManagement.Rol", b =>
                {
                    b.HasOne("FluentisCore.Models.UserManagement.Rol", "JefeRol")
                        .WithMany()
                        .HasForeignKey("JefeRolId");

                    b.Navigation("JefeRol");
                });

            modelBuilder.Entity("FluentisCore.Models.UserManagement.Usuario", b =>
                {
                    b.HasOne("FluentisCore.Models.UserManagement.Departamento", "Departamento")
                        .WithMany("Usuarios")
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("FluentisCore.Models.UserManagement.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId");

                    b.Navigation("Departamento");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.CaminoParalelo", b =>
                {
                    b.HasOne("FluentisCore.Models.WorkflowManagement.PasoFlujo", "PasoDestino")
                        .WithMany()
                        .HasForeignKey("PasoDestinoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.WorkflowManagement.PasoFlujo", "PasoOrigen")
                        .WithMany()
                        .HasForeignKey("PasoOrigenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PasoDestino");

                    b.Navigation("PasoOrigen");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.FlujoActivo", b =>
                {
                    b.HasOne("FluentisCore.Models.WorkflowManagement.FlujoAprobacion", "FlujoEjecucion")
                        .WithMany()
                        .HasForeignKey("FlujoEjecucionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.WorkflowManagement.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FlujoEjecucion");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.FlujoAprobacion", b =>
                {
                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("CreadoPor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.PasoFlujo", b =>
                {
                    b.HasOne("FluentisCore.Models.WorkflowManagement.FlujoAprobacion", "FlujoAprobacion")
                        .WithMany("PasosFlujo")
                        .HasForeignKey("FlujoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlujoAprobacion");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.PasoSolicitud", b =>
                {
                    b.HasOne("FluentisCore.Models.WorkflowManagement.CaminoParalelo", "CaminoParalelo")
                        .WithMany()
                        .HasForeignKey("CaminoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.WorkflowManagement.FlujoActivo", "FlujoActivo")
                        .WithMany()
                        .HasForeignKey("FlujoActivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentisCore.Models.WorkflowManagement.PasoFlujo", "PasoFlujo")
                        .WithMany()
                        .HasForeignKey("PasoId");

                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableId");

                    b.Navigation("CaminoParalelo");

                    b.Navigation("FlujoActivo");

                    b.Navigation("PasoFlujo");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.Solicitud", b =>
                {
                    b.HasOne("FluentisCore.Models.WorkflowManagement.FlujoAprobacion", "FlujoBase")
                        .WithMany()
                        .HasForeignKey("FlujoBaseId");

                    b.HasOne("FluentisCore.Models.UserManagement.Usuario", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlujoBase");

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("FluentisCore.Models.UserManagement.Departamento", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("FluentisCore.Models.UserManagement.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("FluentisCore.Models.WorkflowManagement.FlujoAprobacion", b =>
                {
                    b.Navigation("PasosFlujo");
                });
#pragma warning restore 612, 618
        }
    }
}
